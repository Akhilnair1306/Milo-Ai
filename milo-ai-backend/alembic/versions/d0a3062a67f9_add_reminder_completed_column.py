"""Add reminder_completed column

Revision ID: d0a3062a67f9
Revises: 80f20b16f1d0
Create Date: 2025-10-05 13:43:46.949140

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd0a3062a67f9'
down_revision: Union[str, Sequence[str], None] = '80f20b16f1d0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('caregiver', 'user', name='roleenum'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('caregivers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('caregiver', 'user', name='roleenum'), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.add_column('diary_entries', sa.Column('reminder_completed', sa.Boolean(), nullable=True))
    op.alter_column('diary_entries', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('diary_entries', 'entry_type',
               existing_type=sa.TEXT(),
               type_=sa.Enum('INFORMATION', 'REMINDER', name='entrytype'),
               existing_nullable=False,
               existing_server_default=sa.text("'information'::text"))
    op.alter_column('diary_entries', 'is_recurring',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.drop_index(op.f('idx_diary_entries_embedding'), table_name='diary_entries', postgresql_with={'lists': '100'}, postgresql_using='ivfflat')
    op.create_index(op.f('ix_diary_entries_id'), 'diary_entries', ['id'], unique=False)
    op.create_foreign_key(None, 'diary_entries', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'diary_entries', type_='foreignkey')
    op.drop_index(op.f('ix_diary_entries_id'), table_name='diary_entries')
    op.create_index(op.f('idx_diary_entries_embedding'), 'diary_entries', ['embedding'], unique=False, postgresql_with={'lists': '100'}, postgresql_using='ivfflat')
    op.alter_column('diary_entries', 'is_recurring',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('diary_entries', 'entry_type',
               existing_type=sa.Enum('INFORMATION', 'REMINDER', name='entrytype'),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("'information'::text"))
    op.alter_column('diary_entries', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('diary_entries', 'reminder_completed')
    op.drop_table('caregivers')
    op.drop_table('users')
    # ### end Alembic commands ###
